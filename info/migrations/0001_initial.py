# Generated by Django 3.2.5 on 2021-07-28 07:54

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    # dependencies = [
    #     ('auth', '0012_alter_user_first_name_max_length'),
    # ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=200)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Админ',
                'verbose_name_plural': 'Админы',
            },
        ),
        migrations.CreateModel(
            name='Antenna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Тип антенны',
                'verbose_name_plural': 'Типы антенн',
            },
        ),
        migrations.CreateModel(
            name='Buc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'BUC',
                'verbose_name_plural': 'BUC',
            },
        ),
        migrations.CreateModel(
            name='ChannelID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('name_local', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Номер канала',
                'verbose_name_plural': 'Номера каналов',
            },
        ),
        migrations.CreateModel(
            name='Hotspots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ip', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Hotspot',
                'verbose_name_plural': 'Hotspots',
            },
        ),
        migrations.CreateModel(
            name='IpGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('ip', models.CharField(max_length=20, null=True)),
                ('mask', models.CharField(max_length=20, null=True)),
                ('router_ip', models.CharField(max_length=20, null=True)),
                ('login', models.CharField(blank=True, max_length=20, null=True)),
                ('password', models.CharField(blank=True, max_length=20, null=True)),
                ('is_def', models.IntegerField(blank=True, null=True)),
                ('showms', models.IntegerField(blank=True, default=0)),
                ('operators', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('gmt', models.IntegerField(null=True)),
                ('channel_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.channelid')),
                ('id_hotspot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.hotspots')),
            ],
            options={
                'verbose_name': 'IP-группа',
                'verbose_name_plural': 'IP-группы',
            },
        ),
        migrations.CreateModel(
            name='ModemOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Владелец модема',
                'verbose_name_plural': 'Владельцы модема',
            },
        ),
        migrations.CreateModel(
            name='Modems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('serial', models.CharField(blank=True, max_length=45, null=True)),
                ('mac', models.CharField(blank=True, max_length=45, null=True)),
                ('ip', models.CharField(blank=True, max_length=100, null=True)),
                ('mask', models.IntegerField(blank=True, null=True)),
                ('desc', models.CharField(blank=True, max_length=250, null=True)),
                ('serial_buc', models.CharField(blank=True, max_length=45, null=True)),
                ('date_update', models.CharField(blank=True, max_length=40, null=True)),
                ('file', models.CharField(blank=True, max_length=1000, null=True)),
                ('antenna', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.antenna')),
                ('buc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.buc')),
                ('id_author_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.admins')),
                ('id_ipgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.ipgroups')),
            ],
            options={
                'verbose_name': 'Модем',
                'verbose_name_plural': 'Модемы',
            },
        ),
        migrations.CreateModel(
            name='ModemStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Статус модема',
                'verbose_name_plural': 'Статус модемов',
            },
        ),
        migrations.CreateModel(
            name='ModemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Тип модема',
                'verbose_name_plural': 'Типы модемов',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=256)),
                ('host', models.CharField(max_length=128)),
                ('login', models.CharField(max_length=40)),
                ('password', models.CharField(max_length=50)),
                ('nds', models.IntegerField(null=True)),
                ('proc', models.IntegerField(null=True)),
                ('rod', models.CharField(max_length=256, null=True)),
                ('sogl', models.DateField(default=datetime.date.today, null=True)),
                ('sogl_date', models.DateField(default=datetime.date.today, null=True)),
                ('name', models.CharField(max_length=256, null=True)),
                ('name_podp', models.CharField(max_length=256, null=True)),
                ('inn', models.CharField(max_length=256, null=True)),
                ('proc_case', models.TextField(null=True)),
                ('kpp', models.CharField(max_length=256, null=True)),
                ('id_parent', models.IntegerField(null=True)),
                ('tel', models.CharField(max_length=128, null=True)),
                ('mail', models.CharField(max_length=128, null=True)),
            ],
            options={
                'verbose_name': 'Оператор',
                'verbose_name_plural': 'Операторы',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=256)),
                ('host', models.CharField(blank=True, max_length=128, null=True)),
                ('login', models.CharField(max_length=40, null=True)),
                ('password', models.CharField(max_length=50, null=True)),
                ('nds', models.IntegerField(blank=True, default=0, null=True)),
                ('proc', models.IntegerField(blank=True, null=True)),
                ('rod', models.CharField(blank=True, max_length=256, null=True)),
                ('sogl', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('sogl_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('name_podp', models.CharField(blank=True, max_length=256, null=True)),
                ('inn', models.CharField(blank=True, max_length=256, null=True)),
                ('proc_case', models.TextField(blank=True, null=True)),
                ('kpp', models.CharField(blank=True, max_length=256, null=True)),
                ('id_parent', models.IntegerField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=128, null=True)),
                ('mail', models.CharField(blank=True, max_length=128, null=True)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Партнер',
                'verbose_name_plural': 'Партнеры',
            },
        ),
        migrations.CreateModel(
            name='Satellite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('degree', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': 'Спутник',
                'verbose_name_plural': 'Спутники',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('speed', models.CharField(blank=True, max_length=20, null=True)),
                ('p_speed', models.CharField(blank=True, max_length=20, null=True)),
                ('limit', models.BigIntegerField(blank=True, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('work_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rate_limit', models.CharField(blank=True, max_length=30, null=True)),
                ('burst_rate', models.CharField(blank=True, max_length=30, null=True)),
                ('burst_threshold', models.CharField(blank=True, max_length=30, null=True)),
                ('burst_time', models.CharField(blank=True, max_length=30, null=True)),
                ('uptime_limit', models.CharField(blank=True, max_length=30, null=True)),
                ('uptime_used', models.CharField(blank=True, max_length=30, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('limit2', models.BigIntegerField(blank=True, null=True)),
                ('sort', models.IntegerField(blank=True, null=True)),
                ('connect_disabled', models.IntegerField(blank=True, null=True)),
                ('time_limit', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, default='default', max_length=30)),
                ('sname_second', models.CharField(blank=True, max_length=100, null=True)),
                ('sname_third', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BigIntegerField(blank=True, null=True)),
                ('turbo_show', models.IntegerField(blank=True, null=True)),
                ('fap_id', models.IntegerField(blank=True, null=True)),
                ('hidden', models.IntegerField(blank=True, null=True)),
                ('dops', models.CharField(blank=True, max_length=100, null=True)),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('lft', models.IntegerField(blank=True, null=True)),
                ('rgt', models.IntegerField(blank=True, null=True)),
                ('depth', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='ModemsComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.IntegerField(blank=True, null=True)),
                ('datum', models.CharField(blank=True, max_length=11, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('id_author', models.IntegerField(blank=True, null=True)),
                ('id_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.modems')),
            ],
            options={
                'verbose_name': 'Комментарий по модему',
                'verbose_name_plural': 'Комментарии по модемам',
            },
        ),
        migrations.AddField(
            model_name='modems',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.modemtype'),
        ),
        migrations.AddField(
            model_name='modems',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.modemowner'),
        ),
        migrations.AddField(
            model_name='modems',
            name='satellite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.satellite'),
        ),
        migrations.AddField(
            model_name='modems',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.modemstatus'),
        ),
        migrations.AddField(
            model_name='ipgroups',
            name='id_partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.partner'),
        ),
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=45, null=True)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('street', models.CharField(blank=True, max_length=45, null=True)),
                ('house', models.CharField(blank=True, max_length=45, null=True)),
                ('flat', models.CharField(blank=True, max_length=45, null=True)),
                ('geo', models.CharField(blank=True, max_length=45, null=True)),
                ('tel', models.CharField(blank=True, max_length=45, null=True)),
                ('fio', models.CharField(blank=True, max_length=45, null=True)),
                ('address', models.CharField(blank=True, max_length=248, null=True)),
                ('default', models.IntegerField(blank=True, null=True)),
                ('partner_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.partner')),
            ],
            options={
                'verbose_name': 'Адрес доставки',
                'verbose_name_plural': 'Адреса доставки',
            },
        ),
        migrations.AddField(
            model_name='channelid',
            name='operator_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.operator'),
        ),
    ]
